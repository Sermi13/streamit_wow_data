{"version":3,"file":"/js/auth.min.js","mappings":"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","sources":["webpack:///./Modules/Frontend/Resources/assets/js/auth.js"],"sourcesContent":["// ==========================\n// Password toggle handlers\n// ==========================\nconst togglePasswordVisibility = (toggleId, inputId) => {\n    const toggle = document.querySelector(`#${toggleId}`);\n    const input = document.querySelector(`#${inputId}`);\n    if (toggle && input) {\n        toggle.addEventListener('click', function () {\n            const type = input.getAttribute('type') === 'password' ? 'text' : 'password';\n            input.setAttribute('type', type);\n            this.classList.toggle('fa-eye-slash');\n        });\n    }\n};\n\ntogglePasswordVisibility('togglePassword', 'password');\ntogglePasswordVisibility('toggleConfirmPassword', 'confirm_password');\n\n// ==========================\n// Helpers\n// ==========================\nfunction validateEmail(email) {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n}\n\nfunction showValidationError(input, message) {\n    const container = input.closest('.input-group');\n    const errorFeedback = container.querySelector('.invalid-feedback');\n    if (errorFeedback) {\n        errorFeedback.textContent = message;\n        input.classList.add('is-invalid');\n    }\n}\n\nfunction clearValidationError(input) {\n    const container = input.closest('.input-group');\n    const errorFeedback = container.querySelector('.invalid-feedback');\n    if (errorFeedback) {\n        errorFeedback.textContent = '';\n        input.classList.remove('is-invalid');\n    }\n}\n\nfunction toggleButton(isSubmitting, button, submittingText, defaultText) {\n    button.textContent = isSubmitting ? submittingText : defaultText;\n    button.disabled = isSubmitting;\n}\n\nfunction attachLiveInputClear(form, fields) {\n    fields.forEach(fieldName => {\n        const input = form.querySelector(`input[name=\"${fieldName}\"]`);\n        if (input) {\n            input.addEventListener('input', () => clearValidationError(input));\n        }\n    });\n}\n\n// ==========================\n// Register Form\n// ==========================\nconst registerForm = document.querySelector('#registerForm');\nif (registerForm) {\n    const registerButton = document.querySelector('#register-button');\n    const errorMessage = document.querySelector('#error_message');\n    const baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content');\n\n    const firstNameInput = registerForm.querySelector('input[name=\"first_name\"]');\n    const lastNameInput = registerForm.querySelector('input[name=\"last_name\"]');\n\n    // Prevent numbers in first name and last name + immediate error + auto-remove numbers\n    [firstNameInput, lastNameInput].forEach(input => {\n        input.addEventListener('input', () => {\n            const numberPattern = /[0-9]/g;\n            if (numberPattern.test(input.value)) {\n                input.value = input.value.replace(numberPattern, '');\n                showValidationError(input, 'Name field does not allow numbers.');\n            } else if (!input.value.trim()) {\n                showValidationError(input, 'This field is required.');\n            } else {\n                clearValidationError(input);\n            }\n        });\n    });\n\n    attachLiveInputClear(registerForm, ['first_name', 'last_name', 'email', 'password', 'confirm_password']);\n\n    registerForm.addEventListener('submit', async function (e) {\n        e.preventDefault();\n        if (!validateRegisterForm()) return;\n\n        toggleButton(true, registerButton, 'Signing Up...', 'Sign Up');\n        errorMessage.textContent = '';\n\n        try {\n            const formData = new FormData(this);\n            const response = await fetch(`${baseUrl}/api/register?is_ajax=1`, {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n                },\n                body: formData\n            });\n\n            const data = await response.json();\n\n            if (!response.ok || !data.status) {\n                const message = data.errors ? Object.values(data.errors).flat()[0] : data.message || 'An error occurred during registration';\n                errorMessage.textContent = message;\n                return;\n            }\n\n            // Auto-login after registration\n            const loginResponse = await fetch(`${baseUrl}/api/login?is_ajax=1`, {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n                },\n                body: formData\n            });\n\n            const loginData = await loginResponse.json();\n            if (loginData.status === true) {\n                window.location.href = `${baseUrl}`;\n            } else {\n                errorMessage.textContent = loginData.message || 'Login after registration failed.';\n            }\n\n        } catch (error) {\n            console.error('Registration error:', error);\n            errorMessage.textContent = 'A system error occurred. Please try again later.';\n        } finally {\n            toggleButton(false, registerButton, '', 'Sign Up');\n        }\n    });\n\n    function validateRegisterForm() {\n        let isValid = true;\n        const firstName = registerForm.querySelector('input[name=\"first_name\"]');\n        const lastName = registerForm.querySelector('input[name=\"last_name\"]');\n        const email = registerForm.querySelector('input[name=\"email\"]');\n        const password = registerForm.querySelector('input[name=\"password\"]');\n        const confirmPassword = registerForm.querySelector('input[name=\"confirm_password\"]');\n\n        if (!firstName.value.trim()) {\n            showValidationError(firstName, 'First Name field is required.');\n            isValid = false;\n        }\n\n        if (!lastName.value.trim()) {\n            showValidationError(lastName, 'Last Name field is required.');\n            isValid = false;\n        }\n\n        if (!email.value.trim()) {\n            showValidationError(email, 'Email field is required.');\n            isValid = false;\n        } else if (!validateEmail(email.value)) {\n            showValidationError(email, 'Enter a valid Email Address.');\n            isValid = false;\n        }\n\n        if (!password.value.trim()) {\n            showValidationError(password, 'Password field is required.');\n            isValid = false;\n        } else if (password.value.length < 8) {\n            showValidationError(password, 'Password must be at least 8 characters long.');\n            isValid = false;\n        }\n\n        if (password.value !== confirmPassword.value) {\n            showValidationError(confirmPassword, 'Passwords and confirm password do not match.');\n            isValid = false;\n        }\n\n        return isValid;\n    }\n}\n\n// ==========================\n// Login Form\n// ==========================\nconst loginForm = document.querySelector('#login-form');\nif (loginForm) {\n    const loginButton = document.querySelector('#login-button');\n    const loginError = document.querySelector('#login_error_message');\n    const baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content');\n\n    attachLiveInputClear(loginForm, ['email', 'password']);\n\n    loginForm.addEventListener('submit', async function (e) {\n        e.preventDefault();\n        if (!validateLoginForm()) return;\n\n        toggleButton(true, loginButton, 'Signing In...', 'Sign In');\n        loginError.textContent = '';\n\n        try {\n            const formData = new FormData(this);\n            const response = await fetch(`${baseUrl}/api/login?is_ajax=1`, {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n                },\n                body: formData\n            });\n\n            const data = await response.json();\n\n            if (!response.ok || !data.status) {\n                const message = data.errors ? Object.values(data.errors).flat()[0] : data.message || 'Login failed';\n                loginError.textContent = message;\n                return;\n            }\n\n            if (data.device_limit_reached) {\n                loginError.textContent = \"Your device limit has been reached.\";\n                return;\n            }\n\n            window.location.href = `${baseUrl}`;\n        } catch (error) {\n            console.error('Login error:', error);\n            loginError.textContent = 'A system error occurred. Please try again later.';\n        } finally {\n            toggleButton(false, loginButton, '', 'Sign In');\n        }\n    });\n\n    function validateLoginForm() {\n        let isValid = true;\n        const email = loginForm.querySelector('input[name=\"email\"]');\n        const password = loginForm.querySelector('input[name=\"password\"]');\n\n        if (!email.value.trim()) {\n            showValidationError(email, 'Email field is required.');\n            isValid = false;\n        } else if (!validateEmail(email.value)) {\n            showValidationError(email, 'Enter a valid Email Address.');\n            isValid = false;\n        }\n\n        if (!password.value.trim()) {\n            showValidationError(password, 'Password field is required.');\n            isValid = false;\n        }\n\n        return isValid;\n    }\n}\n\n// ==========================\n// Forgot Password Form\n// ==========================\nconst forgetPasswordForm = document.querySelector('#forgetpassword-form');\nif (forgetPasswordForm) {\n    const forgetPasswordButton = document.querySelector('#forget_password_btn');\n    const forgetPasswordError = document.querySelector('#forgetpassword_error_message');\n    const forgetPasswordMessage = document.querySelector('#forget_password_msg');\n    const baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content');\n\n    attachLiveInputClear(forgetPasswordForm, ['email']);\n\n    forgetPasswordForm.addEventListener('submit', async function (e) {\n        e.preventDefault();\n        if (!validateForgetPasswordForm()) return;\n\n        toggleButton(true, forgetPasswordButton, 'Sending...', 'Submit');\n        forgetPasswordError.textContent = '';\n        forgetPasswordMessage.classList.add('d-none');\n\n        try {\n            const formData = new FormData(this);\n            const response = await fetch(`${baseUrl}/api/forgot-password?is_ajax=1`, {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n                },\n                body: formData\n            });\n\n            const data = await response.json();\n\n            if (!response.ok || !data.status) {\n                const message = data.errors ? Object.values(data.errors).flat()[0] : data.message || 'Password reset failed';\n                forgetPasswordError.textContent = message;\n                return;\n            }\n\n            forgetPasswordMessage.classList.remove('d-none');\n            forgetPasswordForm.reset();\n        } catch (error) {\n            console.error('Forgot password error:', error);\n            forgetPasswordError.textContent = 'A system error occurred. Please try again later.';\n        } finally {\n            toggleButton(false, forgetPasswordButton, '', 'Submit');\n        }\n    });\n\n    function validateForgetPasswordForm() {\n        let isValid = true;\n        const email = forgetPasswordForm.querySelector('input[name=\"email\"]');\n\n        if (!email.value.trim()) {\n            showValidationError(email, 'Email field is required.');\n            isValid = false;\n        } else if (!validateEmail(email.value)) {\n            showValidationError(email, 'Enter a valid Email Address.');\n            isValid = false;\n        }\n\n        return isValid;\n    }\n}\n"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","togglePasswordVisibility","toggleId","inputId","toggle","document","querySelector","concat","input","addEventListener","getAttribute","setAttribute","this","classList","validateEmail","email","test","showValidationError","message","errorFeedback","closest","textContent","add","clearValidationError","remove","toggleButton","isSubmitting","button","submittingText","defaultText","disabled","attachLiveInputClear","form","fields","fieldName","registerForm","registerButton","errorMessage","baseUrl","numberPattern","replace","trim","_ref","_callee","formData","response","data","loginResponse","loginData","_context","preventDefault","isValid","firstName","lastName","password","confirmPassword","FormData","fetch","headers","body","json","ok","status","errors","flat","window","location","href","t0","console","error","_x","loginForm","loginButton","loginError","_ref2","_callee2","_context2","device_limit_reached","_x2","forgetPasswordForm","forgetPasswordButton","forgetPasswordError","forgetPasswordMessage","_ref3","_callee3","_context3","_x3"],"sourceRoot":""}